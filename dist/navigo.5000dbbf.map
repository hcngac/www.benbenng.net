{"version":3,"sources":["node_modules/navigo/lib/navigo.js"],"names":[],"mappings":"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","file":"navigo.5000dbbf.map","sourceRoot":"..","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Navigo = factory());\n}(this, (function () { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction isPushStateAvailable() {\n  return !!(typeof window !== 'undefined' && window.history && window.history.pushState);\n}\n\nfunction Navigo(r, useHash, hash) {\n  this.root = null;\n  this._routes = [];\n  this._useHash = useHash;\n  this._hash = typeof hash === 'undefined' ? '#' : hash;\n  this._paused = false;\n  this._destroyed = false;\n  this._lastRouteResolved = null;\n  this._notFoundHandler = null;\n  this._defaultHandler = null;\n  this._usePushState = !useHash && isPushStateAvailable();\n  this._onLocationChange = this._onLocationChange.bind(this);\n  this._genericHooks = null;\n  this._historyAPIUpdateMethod = 'pushState';\n\n  if (r) {\n    this.root = useHash ? r.replace(/\\/$/, '/' + this._hash) : r.replace(/\\/$/, '');\n  } else if (useHash) {\n    this.root = this._cLoc().split(this._hash)[0].replace(/\\/$/, '/' + this._hash);\n  }\n\n  this._listen();\n  this.updatePageLinks();\n}\n\nfunction clean(s) {\n  if (s instanceof RegExp) return s;\n  return s.replace(/\\/+$/, '').replace(/^\\/+/, '^/');\n}\n\nfunction regExpResultToParams(match, names) {\n  if (names.length === 0) return null;\n  if (!match) return null;\n  return match.slice(1, match.length).reduce(function (params, value, index) {\n    if (params === null) params = {};\n    params[names[index]] = decodeURIComponent(value);\n    return params;\n  }, null);\n}\n\nfunction replaceDynamicURLParts(route) {\n  var paramNames = [],\n      regexp;\n\n  if (route instanceof RegExp) {\n    regexp = route;\n  } else {\n    regexp = new RegExp(route.replace(Navigo.PARAMETER_REGEXP, function (full, dots, name) {\n      paramNames.push(name);\n      return Navigo.REPLACE_VARIABLE_REGEXP;\n    }).replace(Navigo.WILDCARD_REGEXP, Navigo.REPLACE_WILDCARD) + Navigo.FOLLOWED_BY_SLASH_REGEXP, Navigo.MATCH_REGEXP_FLAGS);\n  }\n  return { regexp: regexp, paramNames: paramNames };\n}\n\nfunction getUrlDepth(url) {\n  return url.replace(/\\/$/, '').split('/').length;\n}\n\nfunction compareUrlDepth(urlA, urlB) {\n  return getUrlDepth(urlB) - getUrlDepth(urlA);\n}\n\nfunction findMatchedRoutes(url) {\n  var routes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  return routes.map(function (route) {\n    var _replaceDynamicURLPar = replaceDynamicURLParts(clean(route.route)),\n        regexp = _replaceDynamicURLPar.regexp,\n        paramNames = _replaceDynamicURLPar.paramNames;\n\n    var match = url.replace(/^\\/+/, '/').match(regexp);\n    var params = regExpResultToParams(match, paramNames);\n\n    return match ? { match: match, route: route, params: params } : false;\n  }).filter(function (m) {\n    return m;\n  });\n}\n\nfunction match(url, routes) {\n  return findMatchedRoutes(url, routes)[0] || false;\n}\n\nfunction root(url, routes) {\n  var matched = routes.map(function (route) {\n    return route.route === '' || route.route === '*' ? url : url.split(new RegExp(route.route + '($|\\/)'))[0];\n  });\n  var fallbackURL = clean(url);\n\n  if (matched.length > 1) {\n    return matched.reduce(function (result, url) {\n      if (result.length > url.length) result = url;\n      return result;\n    }, matched[0]);\n  } else if (matched.length === 1) {\n    return matched[0];\n  }\n  return fallbackURL;\n}\n\nfunction isHashChangeAPIAvailable() {\n  return typeof window !== 'undefined' && 'onhashchange' in window;\n}\n\nfunction extractGETParameters(url) {\n  return url.split(/\\?(.*)?$/).slice(1).join('');\n}\n\nfunction getOnlyURL(url, useHash, hash) {\n  var onlyURL = url,\n      split;\n  var cleanGETParam = function cleanGETParam(str) {\n    return str.split(/\\?(.*)?$/)[0];\n  };\n\n  if (typeof hash === 'undefined') {\n    // To preserve BC\n    hash = '#';\n  }\n\n  if (isPushStateAvailable() && !useHash) {\n    onlyURL = cleanGETParam(url).split(hash)[0];\n  } else {\n    split = url.split(hash);\n    onlyURL = split.length > 1 ? cleanGETParam(split[1]) : cleanGETParam(split[0]);\n  }\n\n  return onlyURL;\n}\n\nfunction manageHooks(handler, hooks, params) {\n  if (hooks && (typeof hooks === 'undefined' ? 'undefined' : _typeof(hooks)) === 'object') {\n    if (hooks.before) {\n      hooks.before(function () {\n        var shouldRoute = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n        if (!shouldRoute) return;\n        handler();\n        hooks.after && hooks.after(params);\n      }, params);\n      return;\n    } else if (hooks.after) {\n      handler();\n      hooks.after && hooks.after(params);\n      return;\n    }\n  }\n  handler();\n}\n\nfunction isHashedRoot(url, useHash, hash) {\n  if (isPushStateAvailable() && !useHash) {\n    return false;\n  }\n\n  if (!url.match(hash)) {\n    return false;\n  }\n\n  var split = url.split(hash);\n\n  return split.length < 2 || split[1] === '';\n}\n\nNavigo.prototype = {\n  helpers: {\n    match: match,\n    root: root,\n    clean: clean,\n    getOnlyURL: getOnlyURL\n  },\n  navigate: function navigate(path, absolute) {\n    var to;\n\n    path = path || '';\n    if (this._usePushState) {\n      to = (!absolute ? this._getRoot() + '/' : '') + path.replace(/^\\/+/, '/');\n      to = to.replace(/([^:])(\\/{2,})/g, '$1/');\n      history[this._historyAPIUpdateMethod]({}, '', to);\n      this.resolve();\n    } else if (typeof window !== 'undefined') {\n      path = path.replace(new RegExp('^' + this._hash), '');\n      window.location.href = window.location.href.replace(/#$/, '').replace(new RegExp(this._hash + '.*$'), '') + this._hash + path;\n    }\n    return this;\n  },\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (typeof args[0] === 'function') {\n      this._defaultHandler = { handler: args[0], hooks: args[1] };\n    } else if (args.length >= 2) {\n      if (args[0] === '/') {\n        var func = args[1];\n\n        if (_typeof(args[1]) === 'object') {\n          func = args[1].uses;\n        }\n\n        this._defaultHandler = { handler: func, hooks: args[2] };\n      } else {\n        this._add(args[0], args[1], args[2]);\n      }\n    } else if (_typeof(args[0]) === 'object') {\n      var orderedRoutes = Object.keys(args[0]).sort(compareUrlDepth);\n\n      orderedRoutes.forEach(function (route) {\n        _this.on(route, args[0][route]);\n      });\n    }\n    return this;\n  },\n  off: function off(handler) {\n    if (this._defaultHandler !== null && handler === this._defaultHandler.handler) {\n      this._defaultHandler = null;\n    } else if (this._notFoundHandler !== null && handler === this._notFoundHandler.handler) {\n      this._notFoundHandler = null;\n    }\n    this._routes = this._routes.reduce(function (result, r) {\n      if (r.handler !== handler) result.push(r);\n      return result;\n    }, []);\n    return this;\n  },\n  notFound: function notFound(handler, hooks) {\n    this._notFoundHandler = { handler: handler, hooks: hooks };\n    return this;\n  },\n  resolve: function resolve(current) {\n    var _this2 = this;\n\n    var handler, m;\n    var url = (current || this._cLoc()).replace(this._getRoot(), '');\n\n    if (this._useHash) {\n      url = url.replace(new RegExp('^\\/' + this._hash), '/');\n    }\n\n    var GETParameters = extractGETParameters(current || this._cLoc());\n    var onlyURL = getOnlyURL(url, this._useHash, this._hash);\n\n    if (this._paused) return false;\n\n    if (this._lastRouteResolved && onlyURL === this._lastRouteResolved.url && GETParameters === this._lastRouteResolved.query) {\n      if (this._lastRouteResolved.hooks && this._lastRouteResolved.hooks.already) {\n        this._lastRouteResolved.hooks.already(this._lastRouteResolved.params);\n      }\n      return false;\n    }\n\n    m = match(onlyURL, this._routes);\n\n    if (m) {\n      this._callLeave();\n      this._lastRouteResolved = {\n        url: onlyURL,\n        query: GETParameters,\n        hooks: m.route.hooks,\n        params: m.params,\n        name: m.route.name\n      };\n      handler = m.route.handler;\n      manageHooks(function () {\n        manageHooks(function () {\n          m.route.route instanceof RegExp ? handler.apply(undefined, m.match.slice(1, m.match.length)) : handler(m.params, GETParameters);\n        }, m.route.hooks, m.params, _this2._genericHooks);\n      }, this._genericHooks, m.params);\n      return m;\n    } else if (this._defaultHandler && (onlyURL === '' || onlyURL === '/' || onlyURL === this._hash || isHashedRoot(onlyURL, this._useHash, this._hash))) {\n      manageHooks(function () {\n        manageHooks(function () {\n          _this2._callLeave();\n          _this2._lastRouteResolved = { url: onlyURL, query: GETParameters, hooks: _this2._defaultHandler.hooks };\n          _this2._defaultHandler.handler(GETParameters);\n        }, _this2._defaultHandler.hooks);\n      }, this._genericHooks);\n      return true;\n    } else if (this._notFoundHandler) {\n      manageHooks(function () {\n        manageHooks(function () {\n          _this2._callLeave();\n          _this2._lastRouteResolved = { url: onlyURL, query: GETParameters, hooks: _this2._notFoundHandler.hooks };\n          _this2._notFoundHandler.handler(GETParameters);\n        }, _this2._notFoundHandler.hooks);\n      }, this._genericHooks);\n    }\n    return false;\n  },\n  destroy: function destroy() {\n    this._routes = [];\n    this._destroyed = true;\n    this._lastRouteResolved = null;\n    this._genericHooks = null;\n    clearTimeout(this._listeningInterval);\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('popstate', this._onLocationChange);\n      window.removeEventListener('hashchange', this._onLocationChange);\n    }\n  },\n  updatePageLinks: function updatePageLinks() {\n    var self = this;\n\n    if (typeof document === 'undefined') return;\n\n    this._findLinks().forEach(function (link) {\n      if (!link.hasListenerAttached) {\n        link.addEventListener('click', function (e) {\n          if ((e.ctrlKey || e.metaKey) && e.target.tagName.toLowerCase() == 'a') {\n            return false;\n          }\n          var location = self.getLinkPath(link);\n\n          if (!self._destroyed) {\n            e.preventDefault();\n            self.navigate(location.replace(/\\/+$/, '').replace(/^\\/+/, '/'));\n          }\n        });\n        link.hasListenerAttached = true;\n      }\n    });\n  },\n  generate: function generate(name) {\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var result = this._routes.reduce(function (result, route) {\n      var key;\n\n      if (route.name === name) {\n        result = route.route;\n        for (key in data) {\n          result = result.toString().replace(':' + key, data[key]);\n        }\n      }\n      return result;\n    }, '');\n\n    return this._useHash ? this._hash + result : result;\n  },\n  link: function link(path) {\n    return this._getRoot() + path;\n  },\n  pause: function pause() {\n    var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    this._paused = status;\n    if (status) {\n      this._historyAPIUpdateMethod = 'replaceState';\n    } else {\n      this._historyAPIUpdateMethod = 'pushState';\n    }\n  },\n  resume: function resume() {\n    this.pause(false);\n  },\n  historyAPIUpdateMethod: function historyAPIUpdateMethod(value) {\n    if (typeof value === 'undefined') return this._historyAPIUpdateMethod;\n    this._historyAPIUpdateMethod = value;\n    return value;\n  },\n  disableIfAPINotAvailable: function disableIfAPINotAvailable() {\n    if (!isPushStateAvailable()) {\n      this.destroy();\n    }\n  },\n  lastRouteResolved: function lastRouteResolved() {\n    return this._lastRouteResolved;\n  },\n  getLinkPath: function getLinkPath(link) {\n    return link.getAttribute('href');\n  },\n  hooks: function hooks(_hooks) {\n    this._genericHooks = _hooks;\n  },\n\n  _add: function _add(route) {\n    var handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var hooks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    if (typeof route === 'string') {\n      route = encodeURI(route);\n    }\n    this._routes.push((typeof handler === 'undefined' ? 'undefined' : _typeof(handler)) === 'object' ? {\n      route: route,\n      handler: handler.uses,\n      name: handler.as,\n      hooks: hooks || handler.hooks\n    } : { route: route, handler: handler, hooks: hooks });\n\n    return this._add;\n  },\n  _getRoot: function _getRoot() {\n    if (this.root !== null) return this.root;\n    this.root = root(this._cLoc().split('?')[0], this._routes);\n    return this.root;\n  },\n  _listen: function _listen() {\n    var _this3 = this;\n\n    if (this._usePushState) {\n      window.addEventListener('popstate', this._onLocationChange);\n    } else if (isHashChangeAPIAvailable()) {\n      window.addEventListener('hashchange', this._onLocationChange);\n    } else {\n      var cached = this._cLoc(),\n          current = void 0,\n          _check = void 0;\n\n      _check = function check() {\n        current = _this3._cLoc();\n        if (cached !== current) {\n          cached = current;\n          _this3.resolve();\n        }\n        _this3._listeningInterval = setTimeout(_check, 200);\n      };\n      _check();\n    }\n  },\n  _cLoc: function _cLoc() {\n    if (typeof window !== 'undefined') {\n      if (typeof window.__NAVIGO_WINDOW_LOCATION_MOCK__ !== 'undefined') {\n        return window.__NAVIGO_WINDOW_LOCATION_MOCK__;\n      }\n      return clean(window.location.href);\n    }\n    return '';\n  },\n  _findLinks: function _findLinks() {\n    return [].slice.call(document.querySelectorAll('[data-navigo]'));\n  },\n  _onLocationChange: function _onLocationChange() {\n    this.resolve();\n  },\n  _callLeave: function _callLeave() {\n    var lastRouteResolved = this._lastRouteResolved;\n\n    if (lastRouteResolved && lastRouteResolved.hooks && lastRouteResolved.hooks.leave) {\n      lastRouteResolved.hooks.leave(lastRouteResolved.params);\n    }\n  }\n};\n\nNavigo.PARAMETER_REGEXP = /([:*])(\\w+)/g;\nNavigo.WILDCARD_REGEXP = /\\*/g;\nNavigo.REPLACE_VARIABLE_REGEXP = '([^\\/]+)';\nNavigo.REPLACE_WILDCARD = '(?:.*)';\nNavigo.FOLLOWED_BY_SLASH_REGEXP = '(?:\\/$|$)';\nNavigo.MATCH_REGEXP_FLAGS = '';\n\nreturn Navigo;\n\n})));\n"]}