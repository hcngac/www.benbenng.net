{"version":3,"sources":["node_modules/popper.js/dist/popper-utils.js"],"names":["getStyleComputedProperty","element","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","document","body","ownerDocument","overflow","overflowX","overflowY","test","isBrowser","window","isIE11","MSInputMethodContext","documentMode","isIE10","navigator","userAgent","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","indexOf","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","getClientRect","offsets","width","height","getBoundingClientRect","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","keys","map","sort","a","b","area","filteredAreas","filter","computedPlacement","variation","split","longerTimeoutBrowsers","timeoutDuration","microtaskDebounce","fn","called","Promise","resolve","then","taskDebounce","scheduled","supportsMicroTasks","debounce","find","arr","check","Array","findIndex","prop","value","cur","match","obj","getOffsetRect","elementRect","offsetLeft","offsetTop","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","getReferenceOffsets","state","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","slice","prefix","toCheck","style","isFunction","functionToCheck","toString","isModifierEnabled","modifiers","modifierName","some","name","enabled","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","warn","isNumeric","n","isNaN","isFinite","getWindow","defaultView","removeEventListeners","removeEventListener","updateBound","scrollParents","forEach","scrollElement","eventsEnabled","runModifiers","data","ends","undefined","setAttributes","attributes","setAttribute","removeAttribute","setStyles","unit","attachToScrollParents","event","callback","isBody","addEventListener","passive","push","setupEventListeners","options","index"],"mappings":"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","file":"popper-utils.2bd90b14.map","sourceRoot":"..","sourcesContent":["/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.14.4\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles[`border${sideA}Width`], 10) + parseFloat(styles[`border${sideB}Width`], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body[`offset${axis}`], body[`scroll${axis}`], html[`client${axis}`], html[`offset${axis}`], html[`scroll${axis}`], isIE(10) ? parseInt(html[`offset${axis}`]) + parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width = sizes.width || element.clientWidth || result.right - result.left;\n  const height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = isIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement, fixedPosition = false) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement, padding = 0) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  const sortedAreas = Object.keys(rects).map(key => _extends({\n    key\n  }, rects[key], {\n    area: getArea(rects[key])\n  })).sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(({ width, height }) => width >= popper.clientWidth && height >= popper.clientHeight);\n\n  const computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  let called = false;\n  return () => {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(() => {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n\n/**\n * Get the position of the given element, relative to its offset parent\n * @method\n * @memberof Popper.Utils\n * @param {Element} element\n * @return {Object} position - Coordinates of the element and its `scrollTop`\n */\nfunction getOffsetRect(element) {\n  let elementRect;\n  if (element.nodeName === 'HTML') {\n    const { width, height } = getWindowSizes(element.ownerDocument);\n    elementRect = {\n      width,\n      height,\n      left: 0,\n      top: 0\n    };\n  } else {\n    elementRect = {\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n      left: element.offsetLeft,\n      top: element.offsetTop\n    };\n  }\n\n  // position\n  return getClientRect(elementRect);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  const styles = getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  const getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(({ name, enabled }) => enabled && name === modifierName);\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired = !!requesting && modifiers.some(modifier => {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(`${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`);\n  }\n  return isRequired;\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n// This is here just for backward compatibility with versions lower than v1.10.3\n// you should import the utilities using named exports, if you want them all use:\n// ```\n// import * as PopperUtils from 'popper-utils';\n// ```\n// The default export will be removed in the next major version.\nvar index = {\n  computeAutoPlacement,\n  debounce,\n  findIndex,\n  getBordersSize,\n  getBoundaries,\n  getBoundingClientRect,\n  getClientRect,\n  getOffsetParent,\n  getOffsetRect,\n  getOffsetRectRelativeToArbitraryNode,\n  getOuterSizes,\n  getParentNode,\n  getPopperOffsets,\n  getReferenceOffsets,\n  getScroll,\n  getScrollParent,\n  getStyleComputedProperty,\n  getSupportedPropertyName,\n  getWindowSizes,\n  isFixed,\n  isFunction,\n  isModifierEnabled,\n  isModifierRequired,\n  isNumeric,\n  removeEventListeners,\n  runModifiers,\n  setAttributes,\n  setStyles,\n  setupEventListeners\n};\n\nexport { computeAutoPlacement, debounce, findIndex, getBordersSize, getBoundaries, getBoundingClientRect, getClientRect, getOffsetParent, getOffsetRect, getOffsetRectRelativeToArbitraryNode, getOuterSizes, getParentNode, getPopperOffsets, getReferenceOffsets, getScroll, getScrollParent, getStyleComputedProperty, getSupportedPropertyName, getWindowSizes, isFixed, isFunction, isModifierEnabled, isModifierRequired, isNumeric, removeEventListeners, runModifiers, setAttributes, setStyles, setupEventListeners };\nexport default index;\n//# sourceMappingURL=popper-utils.js.map\n"]}